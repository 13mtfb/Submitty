/*Copyright (c) 2014, Chris Berger, Jesse Freitas, Severin Ibarluzea,
Kiana McNellis, Kienan Knight-Boehm

All rights reserved.
This code is licensed using the BSD "3-Clause" license. Please refer to
"LICENSE.md" for the full license.
*/


#ifndef GRADINGFORMATTER
#define GRADINGFORMATTER_

#include <ostream>
#include <iomanip>
#include "../validation/TestCase.h"


// Write to output stream the human readable point distribution
// for this grading rubric. The output will be very similar to the
// original .submit.grade file that was generated by the auto grader

void outputHumanRubric(std::ostream& ostr,const GradingRubric& rubric){

	const std::string indent = "    ";

	ostr << "Grade for <NAME>\n"
			<< "  submission :#" << rubric.getSubmissionCount() << "\n";

	if (rubric.getSubmissionPenalty() > 0){
		ostr << indent << std::left <<  std::setw(48)
			<< "Penalty for excessive submissions:"
			<< '-' << rubric.getSubmissionPenalty() << " points\n";
	}

	for (unsigned int i = 0; i < rubric.getNumTestCases(); i++){
		const TestCase tc = rubric.getTestCase(i);
		ostr << indent << std::setw(48) << tc.title() << rubric.getTestScore(i)
				<< " / " << tc.points() << "\n";
	}
}

#endif
